{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/mohammad/Projects/github/SimPhone/src/app/api/proxy/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const target = searchParams.get(\"url\");\n    if (!target) {\n      return new Response(\"Missing url param\", { status: 400 });\n    }\n    let url: URL;\n    try {\n      url = new URL(target);\n    } catch {\n      return new Response(\"Invalid url\", { status: 400 });\n    }\n    if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n      return new Response(\"Unsupported protocol\", { status: 400 });\n    }\n\n    const upstream = await fetch(url.toString(), {\n      headers: {\n        \"user-agent\": req.headers.get(\"user-agent\") || \"Mozilla/5.0\",\n        accept: req.headers.get(\"accept\") || \"*/*\",\n      },\n      redirect: \"follow\",\n      cache: \"no-store\",\n    });\n\n    const contentType = upstream.headers.get(\"content-type\") || \"\";\n    const corsHeaders = {\n      \"access-control-allow-origin\": \"*\",\n      \"access-control-allow-headers\": \"*\",\n      \"access-control-allow-methods\": \"GET,HEAD,OPTIONS\",\n    } as Record<string, string>;\n\n    const rewriteAbsoluteToProxy = (input: string, base: URL) => {\n      const targetOrigin = base.origin.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n      // Replace references so resources route back through our proxy\n      return input\n        // HTML attributes with absolute URL\n        .replace(new RegExp(`(src|href|action)=[\"'](https?:\\\\/\\\\/[^\"']+)[\"']`, \"gi\"), (_m, attr, abs) => {\n          try {\n            const u = new URL(abs, base);\n            // Skip truly cross-origin references\n            if (u.origin !== base.origin) return `${attr}=\"${abs}\"`;\n            return `${attr}=\"/api/proxy?url=${encodeURIComponent(u.href)}\"`;\n          } catch {\n            return _m;\n          }\n        })\n        // HTML attributes with root-relative path e.g. \"/_next/...\" or \"/fonts/...\"\n        .replace(/(src|href|action)=[\"'](\\/[^\"']*)[\"']/gi, (_m, attr, rel) => {\n          try {\n            const u = new URL(rel, base.origin);\n            return `${attr}=\"/api/proxy?url=${encodeURIComponent(u.href)}\"`;\n          } catch {\n            return _m;\n          }\n        })\n        // CSS url(absolute)\n        .replace(/url\\((['\"]?)(https?:[^)\"']+)\\1\\)/gi, (_m, q, abs) => {\n          try {\n            const u = new URL(abs, base);\n            if (u.origin !== base.origin) return _m;\n            return `url(/api/proxy?url=${encodeURIComponent(u.href)})`;\n          } catch {\n            return _m;\n          }\n        })\n        // CSS url(/root-relative)\n        .replace(/url\\((['\"]?)(\\/[^)\"']+)\\1\\)/gi, (_m, q, rel) => {\n          try {\n            const u = new URL(rel, base.origin);\n            return `url(/api/proxy?url=${encodeURIComponent(u.href)})`;\n          } catch {\n            return _m;\n          }\n        })\n        // Protocol-relative //host/... -> make absolute to base then proxy\n        .replace(/([\"'\\(])\\/\\/([^\\s\"'\\)]+)/g, (_m, pre, rest) => {\n          try {\n            const u = new URL(`${base.protocol}//${rest}`);\n            return `${pre}/api/proxy?url=${encodeURIComponent(u.href)}`;\n          } catch {\n            return _m;\n          }\n        })\n        // Absolute to specific origin fast path\n        .replace(new RegExp(`${targetOrigin}`, \"g\"), (m) => `/api/proxy?url=${encodeURIComponent(m)}`);\n    };\n\n    if (contentType.includes(\"text/html\")) {\n      const html = await upstream.text();\n      const baseHref = `${url.origin}${url.pathname.endsWith(\"/\") ? url.pathname : url.pathname.substring(0, url.pathname.lastIndexOf(\"/\") + 1)}`;\n      const baseTag = `<base href=\"${baseHref}\">`;\n      const guardHistoryScript = `\n        <script>(function(){\n          try{\n            var BASE_ORIGIN = ${JSON.stringify(url.origin)};\n            function toProxy(u){\n              try{\n                var base = (document && document.baseURI) ? document.baseURI : (BASE_ORIGIN + '/');\n                var abs = new URL(u, base);\n                return '/api/proxy?url=' + encodeURIComponent(abs.href);\n              }catch(e){ return u; }\n            }\n            // History guard within iframe\n            var origPush = history.pushState; var origReplace = history.replaceState;\n            history.pushState = function(s,t,u){ try{ if(u){ var p=toProxy(u); return window.location.assign(p); } return origPush.call(history, s, t); }catch(e){} };\n            history.replaceState = function(s,t,u){ try{ if(u){ var p=toProxy(u); return window.location.replace(p); } return origReplace.call(history, s, t); }catch(e){} };\n\n            // Rewrite anchors and forms to go through proxy\n            function rewriteElement(el){\n              if(!el) return;\n              if(el.tagName==='A' && el.hasAttribute('href')){\n                var href = el.getAttribute('href'); if(!href) return;\n                if(/^javascript:/i.test(href)) return;\n                el.setAttribute('href', toProxy(href));\n              }\n              if(el.tagName==='FORM'){\n                var act = el.getAttribute('action') || '/';\n                el.setAttribute('action', toProxy(act));\n              }\n            }\n            document.addEventListener('click', function(e){\n              var a = e.target && (e.target.closest ? e.target.closest('a[href]') : null);\n              if(a){\n                var href = a.getAttribute('href'); if(!href) return;\n                if(/^javascript:/i.test(href)) return;\n                var proxied = toProxy(href);\n                a.setAttribute('href', proxied);\n                // Prevent SPA router; force full navigation within iframe\n                e.preventDefault();\n                try{ window.location.assign(proxied); }catch(err){ window.location.href = proxied; }\n              }\n            }, true);\n            Array.prototype.forEach.call(document.querySelectorAll('a[href],form'), rewriteElement);\n            new MutationObserver(function(muts){\n              muts.forEach(function(m){ Array.prototype.forEach.call(m.addedNodes||[], function(n){ if(n.nodeType===1){\n                if(n.matches) { if(n.matches('a[href],form')) rewriteElement(n); Array.prototype.forEach.call(n.querySelectorAll('a[href],form'), rewriteElement); }\n              }}); });\n            }).observe(document.documentElement, { childList:true, subtree:true });\n\n            // Patch window.open\n            var _open = window.open; window.open = function(u, name, spec){ try{ return _open.call(window, toProxy(u), name, spec); }catch(e){ return _open.apply(window, arguments); } };\n            // Patch fetch\n            var _fetch = window.fetch; window.fetch = function(input, init){ try{\n              var u = (typeof input==='string') ? input : (input && input.url);\n              if(u) { var p = toProxy(u); if(typeof input==='string') return _fetch(p, init); var req = new Request(p, input); return _fetch(req, init); }\n            }catch(e){} return _fetch(input, init); };\n            // Patch XHR\n            var _openX = XMLHttpRequest.prototype.open; XMLHttpRequest.prototype.open = function(method, u){ try{ var p = toProxy(u); return _openX.apply(this, [method, p].concat([].slice.call(arguments,2))); }catch(e){ return _openX.apply(this, arguments); } };\n          }catch(e){}\n        })();</script>`;\n      const bodyEarlyScript = `<script>(function(){try{var s=document.currentScript;var d=document;var h=d.querySelector('head');if(s&&h){h.insertBefore(s.cloneNode(true),h.firstChild);}}catch(e){}})();</script>`;\n      const rewritten = rewriteAbsoluteToProxy(html, url);\n      const injectedHead = rewritten.replace(/<head(\\s[^>]*)?>/i, (m) => `${m}\\n${baseTag}\\n${guardHistoryScript}`);\n      const injected = injectedHead.replace(/<body(\\s[^>]*)?>/i, (m) => `${m}\\n${bodyEarlyScript}`);\n      return new Response(injected, {\n        status: upstream.status,\n        headers: { \"content-type\": \"text/html; charset=utf-8\", ...corsHeaders },\n      });\n    }\n\n    if (contentType.includes(\"text/css\")) {\n      const css = await upstream.text();\n      const rewritten = rewriteAbsoluteToProxy(css, url);\n      return new Response(rewritten, {\n        status: upstream.status,\n        headers: { \"content-type\": \"text/css; charset=utf-8\", ...corsHeaders },\n      });\n    }\n\n    // Stream other types as-is but add permissive CORS so browser can load fonts/images\n    return new Response(upstream.body, {\n      status: upstream.status,\n      headers: { \"content-type\": contentType, ...corsHeaders },\n    });\n  } catch (err) {\n    return new Response(\"Proxy error\", { status: 502 });\n  }\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}